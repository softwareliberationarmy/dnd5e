TODO:
Add authentication
	https://medium.com/datadigest/integrating-auth0-in-a-react-app-with-an-asp-net-core-api-backend-20a64c0e1f9f
	Move domain info from Auth0 to project secrets in API, and call API to get them	(may require replacing context with custom)
	If logged in user, show characters link and allow to nav to character page
	Lock down characters api so cannot access if not logged in
Review architecture so far and check for cohesiveness
	Open up Resharper architecture viewer
	Can we group all SQL Server work closer together?
Cleanup: Character ctor has too many arguments (consolidate abilities?)
Cleanup: Not happy with the repository unit tests. They test domain things because nothing is exposed
Consider adding Mediatr and CQRS so we can have an end-to-end test without exposing properties
Add AutoFixture to test project
Add logging
Feature: authentication and associating characters with a login
Feature: starting hit points determined by character class
Feature: speed determined by race
Feature: on level-up, user hit points are updated based on character class
Epic: start adding race characteristics, broken out by race
Epic: start adding class characteristics, broken out by class
Feature: user can change character XP

DONE:
