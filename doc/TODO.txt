TODO:
Add simple react website 
+ is a reserved character for URLs
	- add IIS Express exception for this?
	- change it to a POST and pass as message body
	- change the character to something else (2d4p2)
	- make it a query argument instead 
Review architecture so far and check for cohesiveness
Cleanup: Character ctor has too many arguments (consolidate abilities?)
Cleanup: Not happy with the repository unit tests. They test domain things because nothing is exposed
Consider adding Mediatr and CQRS so we can have an end-to-end test without exposing properties
Feature: starting hit points determined by character class
Feature: speed determined by race
Feature: on level-up, user hit points are updated based on character class
Epic: start adding race characteristics, broken out by race
Epic: start adding class characteristics, broken out by class
Feature: user can change character XP

DONE:
Cleanup: consolidate saving throw and character roll methods
Cleanup: refactor all character roll test classes to use a common base class for readability
Feature: roll for initiative uses the player's dexterity by default
	Write a failing controller test
	TDD roll parser
	TDD domain character action
Feature: user proficiency changes with user level/XP
Feature: user skill check includes proficiency where applicable
	TDD Add skill proficiency roll creation to Character 
	TDD Add skill proficiency mapping logic to CharacterRepository
Feature: roll with advantage/disadvantage
Refactor: make roll response responsible for setting result and rolls?
